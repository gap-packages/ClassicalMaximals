#! @Chapter Utility Functions
#! @Section Matrix Functions
#! @Arguments field, nrRows, nrCols, entries
#! @Description
#! Return a <A>nrRows</A> by <A>nrCols</A> matrix with entries over the field
#! <A>field</A> which are given by the list <A>entries</A> in the following
#! way: If <A>entries</A> is a list of three-element lists <C>[i, j, a]</C>,
#! then the entry in position <C>(i, j)</C> will be set to <C>a</C> (and to
#! zero if <A>entries</A> does not contain a list <C>[i, j, a]</C> with some
#! arbitrary <C>a</C>); if this is not the case and <A>entries</A> is a list of
#! length <C>nrRows * nrCols</C>, the elements of <A>entries</A> will be
#! written into the matrix row by row.
DeclareGlobalFunction("MatrixByEntries");

#! @Chapter Utility Functions
#! @Section MatrixFunctions
#! @Arguments entries, field
#! @Description
#! Return an antidiagonal matrix <C>M</C> with entries as specified by the 
#! argument <A>entries</A> in the following way:
#! - If <A>entries</A> is a list, the entries of <C>M</C> are, from top right 
#!   to bottom left, the entries of that list.
#! - If <A>entries</A> is an integer, the entries of <C>M</C> are all ones 
#!   and the number of them is <A>entries</A>.
DeclareGlobalFunction("AntidiagonalMat");

#! @Chapter Utility Functions
#! @Section MatrixFunctions
#! @Arguments d, field
#! @Description
#! Return an antidiagonal <A>d</A> by <A>d</A> matrix over the given field,
#! with the first half of the entries on the antidiagonal equal to one,
#! the reaming half equal to minus one. Note that <A>d</A> must be even.
DeclareGlobalFunction("AntidiagonalHalfOneMat");

#! @Chapter Utility Functions
#! @Section MatrixFunctions
#! @Arguments A
#! @Description
#! Return the matrix <C>B</C> which is the rotation of <C>A</C> by 180 degrees.
#! This is equivalent to multiplying <C>A</C> by the correctly sized matrices of
#! the form AntiDiag(1, ..., 1) from the left and right respectively, but rotation
#! is more efficient than matrix multiplication.
DeclareGlobalFunction("RotateMat");

#! @Chapter Utility Functions
#! @Section Creating Matrix Groups
#! @Arguments gens, F
#! @Description
#! Return a matrix group <C>G</C> over the field <A>F</A> generated by the matrices from
#! the list <A>gens</A>; the generators of <C>G</C> are immutable matrices over
#! <A>F</A>. The attribute <Ref Attr="DefaultFieldOfMatrixGroup"/> for the matrix
#! group constructed will be <A>F</A>.
DeclareGlobalFunction("MatrixGroup");

#! @Chapter Utility Functions
#! @Section Creating Matrix Groups
#! @Arguments gens, F, size
#! @Description
#! Return a matrix group over the field <A>F</A> generated by the matrices from
#! the list <A>gens</A> and set its size to <A>size</A>. Except for aditionally
#! setting the group's size, this does the same as <Ref Func="MatrixGroup"/>.
DeclareGlobalFunction("MatrixGroupWithSize");

DeclareGlobalFunction("SizeSp");
DeclareGlobalFunction("SizePSp");
DeclareGlobalFunction("SizeSU");
DeclareGlobalFunction("SizePSU");
DeclareGlobalFunction("SizeGU");
DeclareGlobalFunction("SizeGO");
DeclareGlobalFunction("SizeSO");
DeclareGlobalFunction("SizeOmega");
